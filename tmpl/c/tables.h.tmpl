#pragma once

#include <time.h>

struct _DBTableDef;

{{ $td := . }}{{ with .L }}{{ range $db := .Databases }}{{ with $db }}{{ range $tbl := .Tables }}
/* ********************** table {{ $db.Name }}.{{ $tbl.Name }} ************************* */

typedef struct _{{ $db.Name }}_{{ $tbl.Name }} {
	const struct _DBTableDef* def;{{ with $tbl }}{{ range $col := .Columns }}
	{{ $td.DataType $col.DataType  }}* {{ $col.Name }};
	{{ $td.DataType $col.DataType  }} {{ $col.Name }}_impl;{{ end }}{{ end }}{{/* columns */}}
} {{ $db.Name }}_{{ $tbl.Name }};

{{ $db.Name }}_{{ $tbl.Name }}* alloc_{{ $db.Name }}_{{ $tbl.Name }}();

#define create_{{ $db.Name }}_{{ $tbl.Name }}(var) \
	{{ $tbl.Name }} var;\
	_create_{{ $tbl.Name }}(&var);
void _create_{{ $db.Name }}_{{ $tbl.Name }}({{ $db.Name }}_{{ $tbl.Name }}* tbl);

{{ end }}{{ end }}{{/* tables */}}{{ end }}{{ end }}{{/* databases */}}